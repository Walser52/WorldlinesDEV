---
title: Limits and Continuity
---

```{python}
#| code-summary: Presets and Definitions


import pandas as pd
import sympy as sp

marker = {"color": "r", "marker": "s", "fillstyle":'full',"markerfacecolor":'white', "markersize":10, "linestyle":'--'}
```

## Averages 

```{python}
x = sp.symbols('x')

y = 4.9 * x**2

evalat = [1,2,3,4,5]
result = [y.subs(x, i).evalf(3) for i in evalat]

xypairs = list(zip(evalat, result))

pd.DataFrame(xypairs, columns = ['x', 'y'])

```

```{python}
x = sp.symbols('x')
func = 4.9 * x**2

evalat = [1, 3, 7]
y = [func.subs(x, val) for val in evalat]

marker['args'] = [evalat, y] #See presets at top

sp.plot(func, (x,-1,7), 
markers = marker, 
annotations=[{'xy': (3, 120), 'text': "Secant", 'fontsize':15}]
)
```


We can also evaluate this numerically:



## Limits

### Of rational functions


```{python}
# Limits of rational functions

x = sp.symbols('x')
p = x**3 + 4*x**2 - 3
q = x**2 + 5

rp = p/q

evalat = -1
result = sp.limit(rp, x, evalat)

# sp.plot(rp, (x, -2,0))
marker['args'] = [evalat, result]

sp.plot(rp, (x, -2,0), markers = marker)
```

### Example - Limit with denominator 0

```{python}
import sympy as sp
x = sp.symbols('x')

f = (sp.sqrt(x**2 + 100) - 10)/ x**2

sp.plot(f, (x, -1 , 1))
```

### Sandwich theorem

```{python}

import sympy as sp
x = sp.symbols('x')

xi, xf = -1,1

f = x**2 * sp.sin(1/x**2)
upper = x**2
lower = -x**2

sp.plot(f, (x, xi , xf))

sp.plot((f, (x, xi , xf)),
        (upper, (x,xi, xf)),
        (lower, (x, xi, xf))
)



```

### One-sided limits


### Limits (Rigorous definition)

### Limits involving infinity

#### Oblique asymptotes



```{python}
x = sp.symbols('x')
f = (x**3 - 8)/(x-4) 

sp.limit(f,x, 0)

sp.plot(f, (x,3.99,4.01))
```